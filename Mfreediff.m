function [hsimu]= Mfreediff(pop,p)
nnodes=117;         % No of nodes throughout the domian
alpha=3;            % Spport to the RBF               
dc=5389.32;         % Avg. Nodal spacing
Cs=alpha*dc;        % Shape parameter
Aera= 2798950000;   % Area of MRBC Aquifer
dt=1;               % Time step size 

% X-distance is specified as column vector (i.e array of size 117 x 1)
x=[0
400
600
2000
4100
6500
6500
6500
6500
6500
6500
6550
8900
9900
12500
12500
12500
12500
12500
12500
12500
12500
12500
18000
18000
18000
18000
18000
18000
18000
18000
18000
18000
24000
24000
24000
24000
24000
24000
24000
24000
24000
24000
24000
30000
30000
30000
30000
30000
30000
30000
30000
30000
30000
35000
35000
35000
35000
35000
35000
35000
35000
35000
35000
38000
41000
41000
41000
41000
41000
41000
41000
41000
41000
46500
46500
46500
46500
46500
46500
46500
46500
46500
46500
52000
52000
52000
52000
52500
53000
53500
51000
49000
49100
58000
58000
58000
58000
56900
55000
60600
60500
64000
64000
64000
64000
64000
70000
70000
70000
70000
68000
72500
75000
75000
72000
70000];

y=[43000
37000
31000
25000
20000
48500
43000
37000
31000
25000
20000
14000
8600
4100
52000
48500
43000
37000
31000
25000
20000
14000
8600
55000
48500
43000
37000
31000
25000
20000
14000
8600
4100
54000
48500
43000
37000
31000
25000
20000
14000
8600
4100
0
54500
48500
43000
37000
31000
25000
20000
14000
8600
4100
54000
48500
43000
37000
31000
25000
20000
14000
8600
4100
57000
55000
48500
43000
37000
31000
25000
20000
14000
8600
54000
48500
43000
37000
31000
25000
20000
14000
8600
4800
52000
48500
43000
37000
31000
25000
20000
14000
8600
4800
53500
48500
43000
37000
31000
25000
54700
37000
60500
54700
48500
43000
39500
63300
60500
54700
48500
43000
65000
63200
60500
48500
45100];

% Specific yield values 
Sy=[0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15
0.15];

% Nodal surface recharge values  
Su=[0.000309644
0.000191554
0.000157945
0.000353869
0.000463003
0.000495987
0.000467979
0.000282874
0.000458783
0.000355383
0.000503046
0.000705786
0.000813191
0.001138835
0.000414925
0.000634205
0.000726958
0.001067444
0.000582093
0.00056864
0.000993088
0.001076795
0.001138043
0.000677055
0.000765846
0.001411427
0.001047601
0.000952859
0.001333137
0.001474757
0.001044572
0.000957039
0.001107281
0.000639739
0.001121558
0.001607427
0.00175814
0.001878376
0.001808806
0.001496302
0.00095186
0.000905874
0.000590733
0.000675233
0.000517014
0.001366811
0.00203338
0.002408482
0.002455641
0.001968307
0.001489618
0.001039244
0.000632575
0.000524297
0.000891186
0.001295605
0.00176245
0.002730093
0.00198777
0.001229585
0.000928088
0.00071222
0.000810138
0.000835046
0.00099385
0.001154241
0.001214127
0.002258611
0.002519922
0.00167365
0.00108841
0.000815308
0.000934294
0.001215454
0.000942971
0.0011817
0.00219018
0.00242168
0.001891994
0.001450034
0.00099207
0.001364522
0.001523659
0.001547714
0.000151111
0.000921521
0.001412142
0.001476727
0.001548738
0.001131897
0.001124558
0.00146419
0.001621729
0.004349128
3.88839E-05
0.0003303
0.000736397
0.00103397
0.001058272
0.000982157
0.000414586
0.001193646
0.000312127
0.000379308
0.000433706
0.000706686
0.001203143
0.000215139
0.000215139
0.000523112
0.000642999
0.000654053
0.000215139
0.000215139
0.000215139
0.000671628
0.000529663];

% Intial head values for each node
h=[60 
57
54
53
53
66
64
50
57
54
53
53
54
54
76
75
67
63
50
58
56
55
54
85
80
75
65
63
63
63
60
60
57
90
87
83
75
73
70
68
66
64
63
63
100
95
93
86
84
79
75
73
70
67
110
105
100
95
90
86
83
76
74
72
115
120
114
110
107
102
95
90
83
75
128
125
120
115
110
105
100
93
85
84
135
133
130
125
123
118
115
103
90
88
143
140
138
135
127
120
145
137
155
150
147
144
142
161
160
158
150
147
165
166
164
152
150];

for l=1:117   
K(117,1)=0;% Nodal hydraukic conductivity matrix in X-direction
if l==1||l==2||l==3||l==6||l==7||l==8||l==9||l==10||l==15||l==16||l==17||l==18||l==19|| l==20
    K(l,:)=K(l,:)+pop(1,p); % extracting first row from population 
elseif l==4||l==5||l==11|| l==12||l==13||l==14||l==21||l==22||l==23||l==32||l==33||l==42||l==43||l==44
    K(l,:)=K(l,:)+pop(2,p);
elseif l==24||l==25||l==26||l==27||l==28||l==34||l==35||l==36||l==37||l==38||l==45||l==46||l==47||l==48||l==55||l==56||l==65||l==66||l==67||l==75||l==76
    K(l,:)=K(l,:)+pop(3,p); 
elseif l==29||l==30||l==39||l==40||l==49||l==50||l==57||l==58||l==59||l==60||l==68||l==69||l==70||l==71||l==72
    K(l,:)=K(l,:)+pop(4,p);    
elseif l==31||l==41||l==53||l==54||l==63||l==64||l==74||l==83||l==84
    K(l,:)=K(l,:)+pop(5,p); % extracting first row from population 
elseif l==77||l==78||l==79||l==80||l==89||l==90||l==99||l==100
    K(l,:)=K(l,:)+pop(6,p);
elseif l==92||l==93||l==94||l==51||l==61||l==72||l==81||l==91||l==52||l==62||l==73||l==82
    K(l,:)=K(l,:)+pop(7,p); 
elseif l==85||l==86||l==87||l==88||l==98||l==102
    K(l,:)=K(l,:)+pop(8,p);
elseif l==95||l==96||l==97||l==105||l==106||l==107||l==111||l==112
    K(l,:)=K(l,:)+pop(9,p); 
elseif l==101||l==103||l==104||l==108||l==109||l==110||l==113||l==114||l==115||l==116||l==117
    K(l,:)=K(l,:)+pop(10,p);
end
end
%% Initialization of diffirent matrix in coefficient matrix 

R=zeros(117,117); % RBF matrix
T=zeros(117,117); % Elementwise product of Sy and R
hKx=zeros(117,1); % Elementwise product of h and Kx
hKy=zeros(117,1); % Elementwise product of h and Ky
KD1=zeros(117,117); % Second order derivative of RBF wrt to x
KD2=zeros(117,117); % Second order derivative of RBF wrt to y
G=zeros(117,117);% Coefficient matrix for unsteady state

for j=1:117
     for nnode=1:117
        R(nnode,j)=(sqrt(abs((x(nnode)-x(j))^2+(y(nnode)-y(j))^2)+Cs^2));
    end
end

T=bsxfun(@times,R,Sy);
hKx=h.*K;
hKy=h.*K;

dt=1;  
for i=1:117 
        for j=1:117
          if i==1||i==2||i==3||i==4||i==5||i==12||i==13||i==14||i==33||i==44||i==54||i==64||i==74||...
            i==84||i==94||i==93||i==92||i==91||i==100||i==99||i==102||i==107||i==112||i==117||i==116||i==110||... 
             i==115||i==114||i==113||i==108||i==103||i==101||i==95||i==85||i==75||i==66||i==65||i==55||i==45||... 
             i==34||i==24||i==15||i==6
            G(i,j)=sqrt(abs((x(i)-x(j))^2+(y(i)-y(j))^2)+Cs^2);% boundary condition will be same as in steady state 
          else 
             G(i,j)=(T(i,j)/dt)-((((y(i)-y(j))^2)+(Cs^2))/((sqrt(abs((x(i)-x(j))^2+(y(i)-y(j))^2)+Cs^2))^3)*hKx(i))-((((x(i)-x(j))^2)+(Cs^2))/((sqrt(abs((x(i)-x(j))^2+(y(i)-y(j))^2)+Cs^2))^3)*hKy(i));
          end
        end        
end  
for z=1:365
for M=1:117
for l=1:117
   L(M,1)=R(M,l)*h(M);%%%%%%%%%% Imp line 
    if  M==1||M==2||M==3||M==4||M==5||M==12||M==13||M==14||M==33||M==44||M==54||M==64||M==74||...
        M==84||M==94||M==93||M==92||M==91||M==100||M==99||M==102||M==107||M==112||M==117||M==116||M==110||... 
        M==115||M==114||M==113||M==108||M==103||M==101||M==95||M==85||M==75||M==66||M==65||M==55||M==45||... 
        M==34||M==24||M==15||M==6
        Fadd(M,1)=h(M,1);
    else 
        Fadd(M,1)=(((L(M,1)).*(Sy(M,1)))/(R(M,l)))/dt;
    end
        Ffinal(M,1)=Su(M,1)+Fadd(M,1); 
end
end  
 h=R*(G\Ffinal);
 head=h;
 hsimu(:,p)=head;
end 
end
